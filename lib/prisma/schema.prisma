// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          Int      @id @default(autoincrement()) 
  firstName   String
  lastName    String
  email       String   @unique
  phone       String?  @unique
  password    String   
  country     String?
  town        String?
  address1    String?
  address2    String?
  credits     Int      @default(1)
  userType    UserType @default(NORMAL)
  createdAt   DateTime @default(now())  
  products    Product[]  @relation("UserProducts")
}

enum UserType {
  NORMAL
  PREVILIGED
}

enum Category {
  ELECTRONICS
  FURNITURE
  AUTOMOBILE
  CLOTHING_FASHION
  MAKEUP_BEAUTY
  SPORTS_HOBBY
  BOOKS
  KIDS
  PROPERTY
  MOBILES
  OTHERS
}

enum ProductType {
  BUY
  EXCHANGE
  BOTH
  DONATE
}

enum ProductStatus {
  ACTIVE     
  SOLD       
  EXCHANGED   
  DONATED     
}


model Product {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  price       Float?       // optional for donation or exchange
  credits     Int          @default(0)
  type        ProductType
  category    Category
  createdAt   DateTime     @default(now())

  ownerId     Int
  owner       User         @relation("UserProducts", fields: [ownerId], references: [id])
  
  images      ProductImage[]
  status      ProductStatus @default(ACTIVE)
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  url       String
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
}
